■ 開発
    ウォーターフォール開発
        システム開発のやり方の1つ。
        前提として工程を後戻りをしない。
        規模の大きく、速度よりも品質が重視されるプロジェクトに向いている。
    アジャイル開発
        システム開発のやり方の1つ。
        作りながら考えましょう的なやり方。
        状況に合わせてクライアントに合わせた開発ができる。
    マイグレーション
        移行すること。
        古いシステムから新しいシステムに移行するときに使われがち。
    デグレーション
        悪化、退化すること。
        直したはずがバグが復活したり前より挙動がおかしかったりすることで、
        前の状態の方がよかったのでないかという状態。
    デプロイ
        使える状態にすること。
        作ったプログラムを動かせる環境に「配置」すること。
    コンフリクト
        衝突すること。
        同じ物を同じタイミングで使おうとしてぶつかっちゃった状態。
    環境
        開発環境（ローカル）
            「ローカル」とは、自前のコンピューターのことを指す。
            「開発環境」とは、システムを開発するために必要な環境。
        検証環境（ステージング）
            本番環境に条件を限りなく近づけた、
            「最終テスト用に用いる本番環境と類似のテスト環境」。
            リハーサル的な環境。
        本番環境
            できあがったシステムやサービスが実際に動く環境。

    設計書/仕様書
        要件定義
            システム開発における工程の１つ。
            クライアントが何がやりたいかをまとめたもの。
        基本設計書
            システム開発における工程の１つ。
            要件定義と詳細設計の中継ぎ的な設計。
            要件定義をもとにシステム全体の完成図
        詳細設計書
            システム開発における工程の１つ。
            基本設計をもとにして、
            実際にプログラムが作れるように詳細を詰める工程。
            詳細設計をもとにプログラミングをしていく。

    テスト
        単体テスト（UT）
            Unit Test
            結合する前の各々のパーツがきちんと機能するかのテスト。
        結合テスト（CT/IT）
            Integration Test
            各々のパーツがそれぞれの機能が連携してもシステムとして機能するかのテスト。
        結合テスト（ST)
            System Test
            クライアントが使うときと同じ状況で動かしたり、より本番に近い状況に動かしたりして行うテスト。

    エビデンス/証跡
        操作内容やその結果起こったことが時系列に沿って記録されていいるもの。
    データパッチ
        るプログラムやデータを更新・修正するために、
        新版との差分を抜き出したデータのこと。
        パッチを反映させて最新の状態に更新することを
        「パッチを当てる」という表現をする。
    Access
        Microsoft社製のデータベース管理ソフト。
        大量のデータを処理するデータベースとして使用するのに向いている。
    マクロ
        行いたい処理を設定することで操作を自動化できる機能のこと。
        VBA
            Visual Basic for Applications
            MicrosoftがMS Officeの拡張機能として提供しているプログラミング言語。
            マクロを作成するためのプログラミング言語。
    GAS（Google Apps Sript）
        Googleが提供するアプリケーション開発プラットフォーム。
        GASを使うとGmailやカレンダー、Googleスプレッドシートなどを
        サービス上で処理を自動化したり、複数のサービスを連携させたりできる。
    
    API
        Application Programming Interface
        「機能を公開しているソフトウェア」と「その機能を使いたいソフトウェア」をつなげる窓口みたいなもの。
        参考URL：https://www.youtube.com/watch?v=HqvcmkFjVnw&ab_channel=%E3%81%84%E3%81%BE%E3%81%AB%E3%82%85%E3%81%AE%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E5%A1%BE
        WEB API
            HTTP・HTTPS通信によってやり取りするAPI。
            REST API    //参考URL：https://tech.012grp.co.jp/entry/rest_api_basics
                Representational State Transfer、シンプルなWebシステムの設計思想
                具体的に状態を定義した情報のやり取り。
                    RESTの4原則
                        ①統一インターフェース
                        ②アドレス可能性
                        ③接続性
                        ④ステートレス性
            SOAP
                SimpleObject Access Protocol
                異なるコンピュータ上で動作するプログラム同士がネットワークを通じてメッセージを伝え合い、
                連携して動作するための通信プロトコル（規約）の一つ。
                メッセージの記述にXMLを、データ伝送に主にHTTPを用いWebサービスの提供や利用に適しているとされる。

    Ajax
        Asynchronous JavaScript ＋ XML
        Asynchronous（エイシンクロナス）の意味は「非同期」
        JavaScriptの非同期通信を使ってXML形式のデータをWebサーバから貰っていろいろしましょうねってやつ。
        実装方式の一つ。
        XML
            「Extensible Markup Language」の略。
            構造を記述するための言語で、データ管理などに使われている。
            ちなみにSpring Bootを用いることで、XML設定を簡略化が可能。
        jarファイル
            「Java Archive」ファイルの略。
            Java開発で利用するファイルをまとめて保管しているファイル
            具体的には、コンパイル済みのclassファイル、画像などのファイルを、
            zip形式に圧縮してまとめたファイル。
            通常のzipファイルとは異なり、解凍せずにjarファイルの状態で使用が可能。
            参考URL：https://style.potepan.com/articles/27234.html
        JSON
            JavaScript Object Notation
            JavaScriptと相性が良い、ファイルの書き方ルール。
            JavaScriptのような記法でファイルを扱いましょうってやつ。
        ステータスコード
            HTTPリクエストの結果を表す3桁の数字。
            例えば存在リクエストした結果存在しないページだったら「４０４」とかえってくるやつ。
        クロスオリジン（Cross-Origin）/CORS（Cross-Origin Resource Sharing）
            同一生成元ポリシー
                「JavaScript で自由にやりとりできるところは、
                その JavaScript をとってきたところと同一の場所だけに制限する
            CORS は同一生成元でないところへの要求を安全に許可する仕組み。
            参考URL：https://javascript.keicode.com/newjs/what-is-cors.php
    
    バリデーション
        入力内容や記述内容が要件を満たしているか妥当性を確認すること。
        具体的にはいかの項目を確認している。
            １．入力チェック
            ２．書式チェック（データの形式チェック）
            ３．妥当性の確認

    データ連携
        Daemon
            メモリ上で常時スタンバっている常駐プログラムのUNIX系OSにおける呼び名。
            目に見えないところ（バッググラウンドプロセス）で働くプログラム。
        CRON
            UNIX系のOSに入っているプログラムの１つ。
            事前に指示をしておくことで、その時間になったら指定しておいたプログラムを動かしてくれるやつ。
            基本的には定期的に何回も動かしたいプログラムを登録するときに使われる。
        バッチ
            ソフトに変更を加えるために用意された後付けのプログラム。
            機能を追加しらりバグを修正したりするときに使う。
        ログ
            コンピュータにおける記録のようなもの。
            いつ、誰が、何をやったのか（起こったのか）、補足などを出力される。
        CSV
            Comma Separated Values(カンマで分離した値)
            項目間が「,（カンマ）」で区切られている
                書式（CSV形式）
                文字データ（CSVデータ）
                文字データが入っているファイル（CSVファイル）とか。
        TSV
            Tab Separated Values(タブで分離した値)
            項目間が「タブ」で区切られている
                書式のこと（TSV形式）
                文字データのこと（TSVデータ）
                文字データが入っているファイルのこと（TSVファイル）とか。
    プルリクエスト
        分散バージョン管理システムの機能の１つ。
        開発者のローカルリポジトリでの変更を他の開発者に通知する機能。


■ チケット管理ツール
    参考URL：https://ray-terrace.co.jp/work-asana/#index_id0
    asana
        マルチタスクをこなす方のためのタスク管理アプリ。
            ・クラウドでデータ管理
            ・UIメニュー･レイアウトが使いやすい。
            ・独自の機能(オートメーション機能、タイムライン機能。ポートフォリオ機能など)を搭載している。
            ・マルチデバイス対応
            ・外部ツールとの連携が可能
    Backlog
        福岡に本社を置くヌーラボによって開発されたプロジェクト管理ツール。
            ・機能に過不足がない
            ・日本語対応
            ・管理ツールに苦手意識を持つ人でも分かるUI
            ・マルチデバイス対応
            ・マークダウン記法に対応
            ・外部ツールとの連携が可能
    Jooto
        タスクをボードに貼り付けて完了したら次のボードへ移動す「カンバン方式」でのプロジェクト管理。
            ・無料のプランあり（4人まで）
            ・クラウドでデータ管理
            ・国産の優れたUI/UX
            ・全てのプロジェクトを俯瞰できる
            ・外部ツールとの連携が可能

    Readmine
        古くから運用されてきたオープのンソースプロジェクト管理ツール。
            ・オープンソース
            ・チケットによるタスクの管理
            ・SubversionやGitとの連携が可能
            ・拡張機能がたくさんある。
            ・ネットや書籍など情報が多く共有されている。
            ・使用経験がある人が多くいるため最もリスクの少ないプロジェクト管理ツールとして使用されている。
    Trello
        タスクをボードに貼り付けて完了したら次へ移動する「カンバン方式」
            ・無料のプランあり
            ・クラウドでデータ管理
            ・UIが使いやすい
            ・UIのカスタマイズしやすい
            ・外部ツールとの連携が可能
            ・コード無しで自動化（Butler）

■ バージョン管理
    集中型
        ひとつのリポジトリに接続してみんなで使うタイプ。
    分散型
        各々のパソコン上にリポジトリを持ち任意のタイミングでリポジトリに同期して使うタイプ。
    Github
        分散型バージョン管理システム
        GithubはGitの仕組みと連携して他のユーザーとやりとりしやすくしているWEBサービスの名称（GUIツール）。
    Backlog
        プロジェクト管理ツールでもあり、外部ツールと連携してバージョン管理も可能。
        SVNやGitと連携している。
    SourceTree
        GitHub上のファイルを複製が可能。
        コマンドを使わなくてもGitの操作をGUIで行える。
    Tortoise SVN
        SVNをGUIとして使用できる集中型バージョン管理システム。
    Git Flow
        Gitにおけるリポジトリの分岐モデルでありルールのこと。
        master
            プロダクトとしてリリースする用のブランチ。
            リリースしたらタグ付けする。
            ちなみにこのブランチ上での作業は行わない。
        release
            プロダクトリリースの準備用。
            リリース予定の機能やバグフィックスが反映された状態のdevelopから分岐する。
            リリース準備が整ったら、masterにマージすると共にdevelopにマージする。
        develop
            開発用ブランチ。
            コードが安定しリリース準備ができたら、releaseへマージする。
            ちなみにこのブランチ上での作業は行わない。
            feature
                機能の追加用。
                developから分岐しdevelopにマージする。

■ FW/ライブラリ
    FW

    Spring Framework

    Struts

    JSF（Java Server Faces）

    ライブラリ

    Bootstrap

    Flyway

    Jackson

    jQuery

    Junit

    Log4j

    Lombok

    ORM



■ 連絡ツール
    ChatWork

    Slack

    IP Messenger



■ Java
    Javadoc

    アノテーション

    メモリ管理
        ヒープ
            JavaのプログラムJVMで一度OSに合わせてコンパイルをされ実行される。
            JVMには3つ領域が存在しそれぞれOSのメモリ領域を割り当てられて管理されている。
            ヒープはOSやアプリケーションなどのシステムが利用するメモリ領域のこと。            
                JVM領域
                    ヒープ領域
                        NEW領域
                            Eden領域
                            From領域
                            To領域
                        OLD領域
                    非ヒープ領域
                        Permanent領域
                            Javaプログラムのクラスやメソッドなど情報が格納されている。
        GC
    
    GoF

    デザインパターン

■ その他
    オブジェクト指向

    バッチ処理

    コンパイル

    カバレッジ

    プラットホーム